Molecular Dynamics Simulation
=====

.. _installation:

Installation
------------

To use Lumache, first install it using pip:

.. code-block:: console

   (.venv) $ pip install lumache

Protocol
----------------

In this method, the interactions between the atoms and molecules are modeled using force fields, and the time evolution of the system is computed using the Newton's equations of motion. The Amber 20 package provides a suite of tools for performing MD simulations, including the generation of input files, the simulation itself, and the analysis of simulation results. Here is a step-by-step guide to performing an MD simulation using Amber 20:

Preparation of input files:
------------

1. Preparation of a molecular structure file in a format readable by Amber, such as PDB or AMBER format. As with the :ref:`protein` and :ref:`ligand`
2. Preparation of a topology file, which defines the molecular structure and the force field parameters to be used.

.. tip::
    In this task, the ``antechamber`` and ``parmchk2`` tools from AmberTools will  be utilized to generate parameters for the General AMBER force field 2 (GAFF2). This force field is specifically designed for pharmaceutical molecules and works well with traditional AMBER force fields for proteins. The AM1-BCC2 charge method will be used to assign partial charges.

Using Antechamber:
-------

Antechamber is specifically designed for the generation of molecular force field parameters and the assignment of partial charges. The tool is widely used for the preparation of molecular systems for molecular dynamics simulations, and it generates force field parameters that can accurately describe the behavior of the molecule.

    
.. code-block:: bash

    $ antechamber -i ligand.H.pdb -fi pdb -o ligand.mol2 -fo mol2 -c bcc -nc 0 -rn ligand -at gaff2

Antechamber uses a combination of empirical and quantum mechanical methods to determine the force field parameters, which include bond lengths, bond angles, torsion angles, and partial charges. It can handle a wide range of molecular systems, including small molecules, peptides, and proteins. The force field parameters generated by antechamber are based on the General AMBER force field (GAFF), a widely used force field in molecular dynamics simulations.


.. code-block:: console

   -antechamber is the name of the tool being executed.
   -i ligand.H.pdb specifies the input file, which is in PDB format and named ligand.H.pdb.
   -fi pdb specifies the format of the input file, which is PDB.
   -o ligand.mol2 specifies the output file, which will be in MOL2 format and named ligand.mol2.
   -fo mol2 specifies the format of the output file, which is MOL2.
   -c bcc specifies the charge method to be used, which is the Bond Charge Corrected (BCC) method.
   -nc 0 specifies the net charge of the molecule, which is 0 in this case.
   -rn ligand specifies the root name for the output file, which is ligand.
   -at gaff2 specifies the atom type to be used, which is the General AMBER force field 2 (GAFF2).

Examining force field parameters with parmchk2
-------

While the most likely combinations of bond, angle and dihedral parameters are defined in the parameter file it is possible that our molecule might contain combinations of atom types for bonds, angles or dihedrals that have not been parameterised. If this is the case, we will have to specify any missing parameters before we can create our prmtop and inpcrd files in LEap.

We will use parmchk2 to test if all the parameters we require are available.

.. code-block:: bash

    $ parmchk2 -i GWS.mol2 -f mol2 -o GWS.frcmod -s gaff2


3. Preparation of a parameter file, which provides information about the simulation conditions, such as temperature, pressure, and simulation time.

Setting up the simulation:
------------

Load the molecular structure, topology, and parameter files into Amber.
Prepare the simulation box, if necessary, by solvating the molecule in water or other solvent.
Minimize the energy of the system to remove any starting configuration artifacts.

Running the simulation:
------------

Run the simulation using the appropriate command. This will compute the time evolution of the system for the specified time interval.
During the simulation, energy and other thermodynamic quantities are computed and logged to a trajectory file.
Analysis of simulation results:

Load the trajectory file into Amber.
------------
Analyze the simulation results by computing various properties, such as the potential energy, temperature, and density.
Visualize the simulation results using visualization tools, such as VMD or PyMOL.

.. autofunction:: lumache.get_random_ingredients

The ``kind`` parameter should be either ``"meat"``, ``"fish"``,
or ``"veggies"``. Otherwise, :py:func:`lumache.get_random_ingredients`
will raise an exception.

.. autoexception:: lumache.InvalidKindError

For example:

>>> import lumache
>>> lumache.get_random_ingredients()
['shells', 'gorgonzola', 'parsley']

Example 1
----------------

Author: Folorunsho Bright Omage

To retrieve a list of random ingredients,
you can use the ``lumache.get_random_ingredients()`` function:

.. autofunction:: lumache.get_random_ingredients

The ``kind`` parameter should be either ``"meat"``, ``"fish"``,
or ``"veggies"``. Otherwise, :py:func:`lumache.get_random_ingredients`
will raise an exception.

.. autoexception:: lumache.InvalidKindError

For example:

>>> import lumache
>>> lumache.get_random_ingredients()
['shells', 'gorgonzola', 'parsley']
